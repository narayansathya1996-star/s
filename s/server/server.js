const express = require('express');
const fs = require('fs');
const path = require('path');
const cors = require('cors');
const { v4: uuidv4 } = require('uuid');
const app = express();
const PORT = process.env.PORT || 4000;
const ADMIN_TOKEN = process.env.ADMIN_TOKEN || 'changeme';
app.use(cors());
app.use(express.json());
app.use(express.static(path.join(__dirname,'public')));
const DATA_DIR = path.join(__dirname,'data');
if(!fs.existsSync(DATA_DIR)) fs.mkdirSync(DATA_DIR);
const DATA_FILE = path.join(DATA_DIR,'quotes.json');
if(!fs.existsSync(DATA_FILE)) fs.writeFileSync(DATA_FILE,'[]','utf8');
app.post('/api/quote',(req,res)=>{ const p=req.body||{}; if(!p.name||!p.email) return res.status(400).json({error:'name and email required'}); const entry = { id: uuidv4(), receivedAt: new Date().toISOString(), ...p }; const arr = JSON.parse(fs.readFileSync(DATA_FILE,'utf8')); arr.push(entry); fs.writeFileSync(DATA_FILE, JSON.stringify(arr,null,2),'utf8'); res.json({ok:true,id:entry.id}); });
app.get('/api/quotes',(req,res)=>{ const token = req.query.token || req.headers['x-admin-token']; if(token !== ADMIN_TOKEN) return res.status(401).json({error:'unauthorized'}); const arr = JSON.parse(fs.readFileSync(DATA_FILE,'utf8')); res.json(arr); });
app.get('/',(req,res)=>{ res.sendFile(path.join(__dirname,'public','index.html')); });
app.listen(PORT,()=>console.log('Server listening on',PORT));